#!/usr/bin/env python2


"""Script to generate HAC features for the Acorns speech dataset.

Data is stored in the feature directory (see local.py). The script proceeds
in two step:

- First the whole corpus (Year 1 and Year 2) is used to build three
codebooks for MFCCs and their first and second order derivatives.

- Then the codebooks are used to generate the hac representations
for the records corresponding to each speaker in each year. Each pair
of a year and a speaker is stored in a separate file.

The first step can be skept by setting BUILD_CODEBOOK to False, provided
that a codebook file exists in the feature directory.
"""


import os

import scipy.sparse as sp
from scipy.io import savemat, loadmat

from multimodal.local import CONFIG
from multimodal.db.acorns import load, feature_file_name
from multimodal.features.hac import (wav2hac, build_codebooks_from_list_of_wav,
                                     MFCC_PARAMS)


CODEBOOK_PATH = os.path.join(CONFIG['feat-dir'], "acorns_codebook.mat")
KS = [150, 150, 100]
BUILD_CODEBOOK = False


def build_acorns_codebook(ks=KS):
    all_records = []
    for year in [1, 2]:
        db = load(year)
        all_records.extend(sum(db.records, []))
    return build_codebooks_from_list_of_wav(
        [r.get_audio_path() for r in all_records], ks)


if BUILD_CODEBOOK:
    codebooks = build_acorns_codebook()
    savemat(CODEBOOK_PATH, {'codebooks': codebooks,
                            'mfcc_params': MFCC_PARAMS})
else:
    codebooks = loadmat(CODEBOOK_PATH)['codebooks'].flatten().tolist()


# Compute histograms
for year in [1, 2]:
    db = load(year)
    for speaker, records in enumerate(db.records):
        hacs = []
        for r in records:
            print(r)
            hacs.append(sp.csr_matrix(wav2hac(r.get_audio_path(), codebooks)))
        hacs = sp.vstack(hacs)
        feat_file = os.path.join(CONFIG['feat-dir'],
                                 feature_file_name(year, speaker))
        savemat(feat_file, {'hac': hacs, 'codebooks': codebooks,
                            'mfcc_params': MFCC_PARAMS})
